import Head from "next/head";
import Image from "next/image";
import { useState, useEffect } from "react";
import styles from "../styles/Home.module.css";

export default function Home() {
  const [years, setYears] = useState([]);
  const [selectedYear, setSelectedYear] = useState(null);
  const [prizes, setPrizes] = useState([]);

  async function fetchYears() {
    const response = await fetch("https://ignoble-api.onrender.com/years");
    const data = await response.json();
    setYears(data.years);
  }

  useEffect(() => {
    fetchYears();
  }, []);

  useEffect(() => {
    console.log("FETCH BY YEAR EFFECT!", selectedYear);

    // const log = () => {
    //   console.log("scrolling!!!");
    // };
    // window.addEventListener("scroll", log);
    // request cancelling!
    const controller = new AbortController();

    async function fetchPrizesByYear() {
      if (selectedYear === null) return;

      try {
        const response = await fetch(
          `https://ignoble-api.onrender.com/years/${selectedYear}/prizes`,
          { signal: controller.signal }
        );
        const data = await response.json();
        console.log("FETCHING???", data.prizes);
        setPrizes(data.prizes);
      } catch (error) {
        console.log(error.name);
        if (error.name === "AbortError") {
          // we can ignore this
        } else {
          console.error(error);
        }
      }
    }

    fetchPrizesByYear();

    return () => {
      // fired before the new effect is executed
      console.log("CLEANUP!");
      controller.abort(); // cancels a request if it has not completed
      // window.removeEventListener("scroll", log);
    };
  }, [selectedYear]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          {years.sort().map((year) => (
            <button
              key={year}
              style={{
                backgroundColor:
                  selectedYear === year ? "dodgerblue" : "initial",
              }}
              onClick={() => setSelectedYear(year)}
            >
              {year}
            </button>
          ))}
        </div>
        <div>
          <h2>{selectedYear}</h2>
          {prizes.map((prize) => {
            return (
              <details key={prize.id}>
                <summary>{prize.category}</summary>
                <p>{prize.rationale}</p>
              </details>
            );
          })}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
